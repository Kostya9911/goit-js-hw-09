{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAOMC,EAAOC,SAASC,cAAc,QAC9BC,EAAMF,SAASC,cAAc,UAQnCF,EAAKI,iBAAiB,UAsBtB,SAAoBC,GAClBF,EAAIG,aAAa,WAAY,YAC7BD,EAAIE,iBAKkD,IAEjCC,EAAjBH,EAAII,cADNC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAGvBC,EAAWC,OAAOL,EAAMM,OACxBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAC1BG,EAAI,EAIFC,EAAaC,aAAY,WAhCjC,IAAuBC,EAAUX,GAiC7BQ,GAAK,KACKD,IACRK,cAAcH,GAG4BI,YAA/B,WACTtB,EAAIuB,gBAAgB,W,GACnB,OAxCcH,EA0CLH,EA1CeR,EA0CZG,EAzCZ,IAAIY,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCP,YAAW,WACLK,EACFF,EAAQ,CAAEL,WAAUX,UAEpBiB,EAAO,CAAEN,WAAUX,S,GAEpBA,E,KAiCAqB,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MACjBd,EAAAqC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MAClBd,EAAAqC,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANzB,EAAM,M,MAE7DM,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n/**\n  |============================\n  | Змінні\n  |============================\n*/\nconst form = document.querySelector('form');\nconst btn = document.querySelector('button');\n\n/**\n  |============================\n  | Слухачі\n  |============================\n*/\n\nform.addEventListener('submit', formSubmit);\n\n/**\n  |============================\n  | Функції\n  |============================\n*/\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction formSubmit(evt) {\n  btn.setAttribute('disabled', 'disabled');\n  evt.preventDefault();\n\n  // Питання! Нижче об`єкт - elements. Як йому передаються ключі delay, step, amount, та як JS розуміє де які елементи\n  // привязати до ключів. Я знаю шо так можна, але ж не зрозумілі правила.\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  let numDalay = Number(delay.value);\n  let numStep = Number(step.value);\n  let numAmount = Number(amount.value);\n  let i = 0;\n\n  // Також можна зробити лічілник через \"for\"\n\n  const intervalId = setInterval(() => {\n    i += 1;\n    if (i === numAmount) {\n      clearInterval(intervalId);\n\n      // Щоб кнопка активувалася з невеликим затриманням\n      setTimeout(() => {\n        btn.removeAttribute('disabled');\n      }, 1000);\n    }\n    createPromise(i, numDalay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, numStep);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btn","addEventListener","evt","setAttribute","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","numDalay","Number","value","numStep","numAmount","i","intervalId","setInterval","position","clearInterval","setTimeout","removeAttribute","Promise","resolve","reject","shouldResolve","Math","random","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e53e7258.js.map"}